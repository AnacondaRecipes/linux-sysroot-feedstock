{% if cross_target_platform == "linux-aarch64" %}
{% set distro = "amzn2" %}
{% set version = "2.26" %}
{% set version2 = "2.26-39" %}
{% set kernel_headers_version = "4.14.214" %}
{% set kernel_headers_version2 = "4.14.214-160.339" %}
{% else %}
{% set distro = "el7" %}
{% set version = "2.17" %}
{% set version2 = "2.17-317" %}  # [cross_target_platform == "linux-s390x" or cross_target_platform == "linux-ppc64le"]
{% set version2 = "2.17-307" %}  # [cross_target_platform != "linux-s390x" and cross_target_platform != "linux-ppc64le"]
{% set kernel_headers_version = "3.10.0" %}  # [cross_target_platform != "linux-aarch64"]
{% set kernel_headers_version2 = "3.10.0-1127" %}  # [cross_target_platform == "linux-64"]
{% set kernel_headers_version2 = "4.18.0-193.28.1" %}  # [cross_target_platform == "linux-aarch64"]
{% set kernel_headers_version2 = "3.10.0-1160" %}  # [cross_target_platform != "linux-64"]
{% endif %}

{% set build_number = "15" %}

package:
  name: linux-sysroot
  version: {{ version }}

source:
  - folder: binary
    no_hoist: True
    path: rpms/glibc-{{ version2 }}.{{ distro }}.{{ centos_machine }}.rpm

{% if cross_target_platform == "linux-aarch64" %}
  # Amazon Linux split what's normally in just `glibc` across multiple packages
  - folder: binary-glibc-locale-source
    no_hoist: True
    path: rpms/glibc-locale-source-{{ version2 }}.{{ distro }}.{{ centos_machine }}.rpm
  - folder: binary-glibc-nss-devel
    no_hoist: True
    path: rpms/glibc-nss-devel-{{ version2 }}.{{ distro }}.{{ centos_machine }}.rpm
  - folder: binary-libcrypt
    no_hoist: True
    path: rpms/libcrypt-{{ version2 }}.{{ distro }}.{{ centos_machine }}.rpm
  - folder: binary-nss_db
    no_hoist: True
    path: rpms/nss_db-{{ version2 }}.{{ distro }}.{{ centos_machine }}.rpm
  - folder: binary-nss_hesiod
    no_hoist: True
    path: rpms/nss_hesiod-{{ version2 }}.{{ distro }}.{{ centos_machine }}.rpm
  - folder: binary-nss_nis
    no_hoist: True
    path: rpms/nss_nis-{{ version2 }}.{{ distro }}.{{ centos_machine }}.rpm
{% endif %}

  - folder: binary-glibc-common
    no_hoist: True
    path: rpms/glibc-common-{{ version2 }}.{{ distro }}.{{ centos_machine }}.rpm

  - folder: binary-glibc-devel
    no_hoist: True
    path: rpms/glibc-devel-{{ version2 }}.{{ distro }}.{{ centos_machine }}.rpm

  - folder: binary-tzdata
    no_hoist: True
    path: rpms/tzdata-2019c-1.el7.noarch.rpm

  - folder: binary-glibc-headers
    no_hoist: True
    path: rpms/glibc-headers-{{ version2 }}.{{ distro }}.{{ centos_machine }}.rpm

  - folder: binary-kernel-headers
    no_hoist: True
    path: rpms/kernel-headers-{{ kernel_headers_version2 }}.{{ distro }}.{{ centos_machine }}.rpm

  - folder: binary-freebl
    no_hoist: True
    path: rpms/nss-softokn-freebl-3.44.0-8.{{ distro }}_7.{{ centos_machine }}.rpm  # [cross_target_platform != "linux-aarch64"]
    path: rpms/nss-softokn-freebl-3.53.1-6.{{ distro }}.{{ centos_machine }}.rpm  # [cross_target_platform == "linux-aarch64"]

build:
  number: {{ build_number }}
  noarch: generic
  missing_dso_whitelist:
    - '*'
  # building it on one architecture is fine enough
  skip: True  # [not (linux and x86_64)]

outputs:
  - name: kernel-headers_{{ cross_target_platform }}
    version: {{ kernel_headers_version }}
    script: build-kernel-headers.sh
    build:
      noarch: generic
      binary_relocation: False
      detect_binary_files_with_prefix: False
      missing_dso_whitelist:
        - '*'
    requirements:
{% if cross_target_platform == "linux-64" %}
      run:
        - _sysroot_{{ cross_target_platform }}_curr_repodata_hack 3.*
{% endif %}
      run_constrained:
        - sysroot_{{ cross_target_platform }} =={{ version }}
    test:
      commands:
        test -f $PREFIX/{{ target_machine }}-{{ ctng_vendor }}-linux-gnu/sysroot/usr/include/linux/version.h

{% if cross_target_platform == "linux-64" %}
  - name: _sysroot_{{ cross_target_platform }}_curr_repodata_hack
    version: 3
    build:
      noarch: generic
      missing_dso_whitelist:
        - '*'
    test:
      commands:
        - echo "works!"
{% endif %}
  - name: sysroot_{{ cross_target_platform }}
    script: build-sysroot.sh
    build:
      noarch: generic
      missing_dso_whitelist:
        - '*'
      binary_relocation: False
      detect_binary_files_with_prefix: False
{% if cross_target_platform == "linux-64" %}
      track_features:
        - sysroot_{{ cross_target_platform }}_{{ version }}
      run_exports:
        strong:
          - __glibc >={{ version }},<3.0.a0
{% endif %}
    requirements:
      run:
{% if cross_target_platform == "linux-64" %}
        - _sysroot_{{ cross_target_platform }}_curr_repodata_hack 3.*
{% endif %}
        - {{ pin_subpackage('kernel-headers_' ~ cross_target_platform, exact=True) }}
    test:
      commands:
        - test -f $PREFIX/{{ target_machine }}-{{ ctng_vendor }}-linux-gnu/sysroot/lib64/libc.so.6
        - test -f $PREFIX/{{ target_machine }}-{{ ctng_vendor }}-linux-gnu/sysroot/lib64/libc.so.6
        - test -f $PREFIX/{{ target_machine }}-{{ ctng_vendor }}-linux-gnu/sysroot/sbin/ldconfig
        - test -f $PREFIX/{{ target_machine }}-{{ ctng_vendor }}-linux-gnu/sysroot/usr/lib64/crt1.o
        - test -f $PREFIX/{{ target_machine }}-{{ ctng_vendor }}-linux-gnu/sysroot/usr/include/limits.h
        - test -f $PREFIX/{{ target_machine }}-{{ ctng_vendor }}-linux-gnu/sysroot/usr/include/gnu/stubs-64.h  # [cross_target_platform == "linux-64"]
        - test -f $PREFIX/{{ target_machine }}-{{ ctng_vendor }}-linux-gnu/sysroot/usr/include/gnu/stubs.h  # [cross_target_platform != "linux-64"]
        - test -d $PREFIX/{{ target_machine }}-{{ ctng_vendor }}-linux-gnu/sysroot/usr/share/locale
        - test -f $PREFIX/{{ target_machine }}-{{ ctng_vendor }}-linux-gnu/sysroot/usr/bin/ldd

  - name: sysroot-{{ cdt_name }}-{{ cdt_arch }}
    build:
      noarch: generic
      missing_dso_whitelist:
        - '*'
    requirements:
      run:
        - sysroot_{{ cross_target_platform }} =={{ version }}
    test:
      commands:
        - test -f $PREFIX/{{ target_machine }}-conda-linux-gnu/sysroot/lib64/libc.so.6
        - test -f $PREFIX/{{ target_machine }}-conda-linux-gnu/sysroot/sbin/ldconfig
        - test -f $PREFIX/{{ target_machine }}-conda-linux-gnu/sysroot/usr/lib64/crt1.o
        - test -f $PREFIX/{{ target_machine }}-conda-linux-gnu/sysroot/usr/include/limits.h
        - test -f $PREFIX/{{ target_machine }}-conda-linux-gnu/sysroot/usr/include/gnu/stubs-64.h  # [cross_target_platform == "linux-64"]
        - test -f $PREFIX/{{ target_machine }}-conda-linux-gnu/sysroot/usr/include/gnu/stubs.h  # [cross_target_platform != "linux-64"]
        - test -d $PREFIX/{{ target_machine }}-conda-linux-gnu/sysroot/usr/share/locale
        - test -f $PREFIX/{{ target_machine }}-conda-linux-gnu/sysroot/usr/bin/ldd
        - test -f $PREFIX/{{ target_machine }}-{{ ctng_vendor }}-linux-gnu/sysroot/lib64/libc.so.6

about:
  home: http://sources.redhat.com/glibc/
  license: LGPL-2.0-or-later AND LGPL-2.0-or-later WITH exceptions AND GPL-2.0-or-later AND MPL-2.0
  license_family: GPL
  license_file: nss-license
  # other license files are packaged with source
  summary: "(CDT) The GNU libc libraries and header files for the Linux kernel for use by glibc"
  description: |
        The glibc package contains standard libraries which are used by multiple
        programs on the system. In order to save disk space and memory, as well as to
        make upgrading easier, common system code is kept in one place and shared
        between programs. This particular package contains the most important sets of
        shared libraries: the standard C library and the standard math library.
        Without these two libraries, a Linux system will not function.

        Kernel-headers includes the C header files that specify the interface between
        the Linux kernel and userspace libraries and programs.  The header files
        define structures and constants that are needed for building most standard
        programs and are also needed for rebuilding the glibc package.

extra:
  recipe-maintainers:
    - isuruf
    - scopatz
    - beckermr
    - katietz
